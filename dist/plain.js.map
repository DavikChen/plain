{"version":3,"file":"plain.js","sources":["../src/plain.ts"],"sourcesContent":["import { Layers } from './type/type';\nimport Factory from './factory/index';\nimport LatLng from './factory/latlng';\nimport { mapOption, markerOption, polylineOption } from './options/mapOptions';\nimport B_Map from './constructors/bmap/index';\n\nconst FACTORY = {\n    'BMap': new BMap(),\n};\n\nexport default class Plain {\n    map: object;\n    // layers: Layers;                         // every layer has own id and type\n    factory: Factory;          \n    \n    constructor (factory?: Factory | string) {\n        // this.layers = {};        \n        this.use(factory);        \n    }\n\n    // load the map factory plugin\n    use (factory: Factory | string): Plain {\n        let f;\n        if (typeof factory === 'string') {\n            f = FACTORY[factory];\n        }\n        this.factory = f;\n        return this;\n    }\n\n    // create Map\n    @tagging()\n    Map (opt: mapOption) {\n        return this.factory.Map(opt);\n    }\n\n    // create Marker\n    @tagging()\n    Marker (latlng: LatLng, opt: markerOption) {\n        return this.factory.Marker(latlng, opt);\n    }\n\n    // create Polyline\n    @tagging()\n    Polyline (opt: polylineOption) {\n        let polyline = this.factory.Polyline(opt);\n        return this.factory.Polyline(opt);\n    }\n}\n\n/**\n * PropertyDescriptor\n */\nfunction tagging (): Function {\n    return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n        let oldFn = descriptor.value;\n        descriptor.value= function (arg: any) {\n            let value = oldFn.call(this, arg);\n            value._id = Math.random().toString(16).substr(2);\n            return value;  \n        };\n    }\n}\n\n"],"names":[],"mappings":";;;;;;;;;;;;;AAMA,IAAM,OAAO,GAAG;IACZ,MAAM,EAAE,IAAI,IAAI,EAAE;CACrB,CAAC;AAEa;IAKX,eAAa,OAA0B;QAEnC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KACrB;IAGD,mBAAG,GAAH,UAAK,OAAyB;QAC1B,IAAI,CAAC,CAAC;QACN,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC7B,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC;KACf;IAID,mBAAG,GAAH,UAAK,GAAc;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAChC;IAID,sBAAM,GAAN,UAAQ,MAAc,EAAE,GAAiB;QACrC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC3C;IAID,wBAAQ,GAAR,UAAU,GAAmB;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACrC;IAhBD;QAAC,OAAO,EAAE;oCAAA;IAMV;QAAC,OAAO,EAAE;uCAAA;IAMV;QAAC,OAAO,EAAE;yCAAA;IAKd,YAAC;CAAA,IAAA;AAKD;IACI,OAAO,UAAU,MAAW,EAAE,WAAmB,EAAE,UAA8B;QAC7E,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;QAC7B,UAAU,CAAC,KAAK,GAAE,UAAU,GAAQ;YAChC,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAClC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACjD,OAAO,KAAK,CAAC;SAChB,CAAC;KACL,CAAA;CACJ;;;;;;;;"}