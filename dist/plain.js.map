{"version":3,"file":"plain.js","sources":["../src/factory/mapsEventListener.ts","../src/options/default.ts","../src/var.ts","../src/utils.ts","../src/constructors/amap/index.ts","../src/constructors/bmap/index.ts","../src/constructors/gmap/index.ts","../src/plain.ts"],"sourcesContent":["// Return an EventListener that can be used with Layer.off();\nimport Layer from './layer';\nimport O from '../options/mapOptions';\n\nexport default class MapsEventListener {\n    eventName: string;\n    host: Layer;           // Plain.Layer\n    handler: Function;    // Event handler\n    listener: any;        // Original MapsEventListener(eg: google.maps.event)\n    \n    constructor(parm: O.EventListenerOptions) {\n        this.eventName = parm.eventName;\n        this.host = parm.host;\n        this.handler = parm.handler;\n        this.listener = parm.listener;\n    }\n}","export default {\n    polyline: {\n        color: '#3388ff',\n        weight: 3,\n        opacity: 0.8,\n    }\n}","export default {\n    DEBUG: true,\n    name: 'plain',\n}","import variable from './var';\nimport LatLng from './factory/latlng';\n\nexport default {\n    // Print infomation\n    log(v: any): void {\n        if (v instanceof Error) {\n            console.error(v);\n        } else if(variable.DEBUG) {\n            console.log(`[${variable.name}] `, v);\n        }\n    },\n    \n    // Return a rectangle that cover all points\n    getBound(latlngs: LatLng[]): LatLng[] {\n        let rectangle;\n        let minLat = latlngs[0][0],\n            minLng = latlngs[0][1],\n            maxLat = minLat,\n            maxLng = minLng;\n        latlngs.map(latlng => {\n            if (latlng[0] < minLat) {\n                minLat = latlng[0];\n            } else if (latlng[0] > maxLat) {\n                maxLat = latlng[0];\n            }\n            if (latlng[1] < minLng) {\n                minLng = latlng[1];\n            } else if (latlng[1] > maxLng) {\n                maxLng = latlng[1];\n            }\n        });\n        return [[minLat, minLng], [maxLat, maxLng]];\n    },\n    \n    // Object property assign\n    // TODO: ...obj[]\n    objectAssign<T> (target: T, source: T): T {\n        if ((<any>Object).assign) {\n            (<any>Object).assign(target, source);\n        } else {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    },\n    \n    // GCJ02 to BD09\n    g2b (latlngs: LatLng[]): LatLng[] {\n        return latlngs.map(latlng => {\n            // TODO\n            return latlng;\n        });\n    }\n}","/// <reference path=\"./amap.d.ts\" />\n\nimport F from '../../factory/index';\nimport F_MapsEventListener from '../../factory/mapsEventListener';\nimport * as O from '../../options/mapOptions';\nimport D from '../../options/default';\nimport util from '../../utils';\n\n// AMap in not defined in this file\n// But you will get this variable on window Object\n// while loaded baidu map script\n// NOTICE: AMap library will cause memory leak !!\n\n@eventBinder\nclass Map implements F.Map {\n    _original: AMap.Map;\n    _id: string;\n    MAP_TYPE: F.MapType;\n    \n    private _boundMarkers: AMap.Marker[];      // For set Viewport\n    private _boundIcon: AMap.Icon;             // For set Viewport\n    \n    constructor(opt: O.MapOption) {\n        this.MAP_TYPE = {\n            HYBRID: 'HYBRID',\n            NORMAL: 'NORMAL',\n            SATELLITE: 'SATELLITE',\n            // TERRAIN: 'TERRAIN',\n        };\n        this._original = new AMap.Map(opt.container, {\n            zoom: opt.zoom,\n            center: opt.center.slice().reverse(),\n        });\n    }\n\n    addLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(this._original);\n            }\n        } else {\n            layer._original.setMap(this._original);\n        }\n    }\n\n    removeLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(null);\n            }\n        } else {\n            layer._original.setMap(null);\n        }\n    }\n\n    clearLayers() {\n        this._original.clearMap();\n    }\n\n    setZoom(zoom: number) {\n        this._original.setZoom(zoom);\n    }\n\n    getZoom() {\n        return this._original.getZoom();\n    }\n\n    zoomIn() {\n        this._original.zoomIn();    \n    }\n    \n    zoomOut() {\n        this._original.zoomOut();\n    }\n    \n    fitView(latlngs: F.LatLng[], opt?: O.ViewportOption) {\n        let bound = util.getBound(latlngs);     // length === 2\n        if (this._boundMarkers) {\n            bound.map((p, i, arr) => {\n                this._boundMarkers[i].setPosition([p[1], p[0]]);\n            });\n        } else {\n            this._boundIcon = new AMap.Icon({\n                size: new AMap.Size(0, 0)\n            });\n            this._boundMarkers = bound.map(latlng => {\n                return new AMap.Marker({\n                    map: this._original,\n                    icon: this._boundIcon,\n                    position: [latlng[1], latlng[0]],\n                });\n            });\n        }\n        this._original.setFitView(this._boundMarkers);\n        // Release memory\n        this._original.remove(this._boundMarkers);\n    }\n\n    setCenter(latlng: F.LatLng) {\n        this._original.setCenter(new AMap.LngLat(latlng[1], latlng[0]));\n    }\n\n    getCenter(): F.LatLng {\n        let center = this._original.getCenter();\n        return [center.lat, center.lng];\n    }\n    \n    panTo(latlng: F.LatLng) {\n        this._original.panTo(latlng.slice().reverse());\n    }\n    \n    setMapType(type: string) {\n        let { MAP_TYPE } = this;\n        switch (type) {\n            case MAP_TYPE.HYBRID: {\n                this._original.setLayers([new AMap.TileLayer.Satellite(), new AMap.TileLayer.RoadNet()]);\n                break;\n            }\n            case MAP_TYPE.NORMAL: {\n                this._original.setLayers([new AMap.TileLayer()]);\n                break;\n            }\n            case MAP_TYPE.SATELLITE: {\n                this._original.setLayers([new AMap.TileLayer.Satellite()]);\n                break;\n            }\n            case MAP_TYPE.TERRAIN: {\n                // TODO\n                break;\n            }\n        }\n    }\n}\n\n@eventBinder\nclass Marker implements F.Marker {\n    _id: string;\n    _original: AMap.Marker;\n\n    constructor(latlng: F.LatLng, opt?: O.MarkerOption) {\n        let opts: AMap.MarkerOptions = this.formatOpt(opt, latlng);\n        this._original = new AMap.Marker(opts);\n    }\n\n    formatOpt (opt: O.MarkerOption = {}, latlng: F.LatLng): object {\n        return {\n            map: null,\n            position: [latlng[1], latlng[0]],\n            icon: opt.icon ? opt.icon._original : null,\n            raiseOnDrag: opt.raiseOnDrag ? opt.raiseOnDrag : true,\n            crossOnDrag: opt.crossOnDrag ? opt.crossOnDrag : true,\n            // offset: opt.offset ? new AMap.Size(opt.offset[0], opt.offset[1]) : null,\n            draggable: opt.draggable\n        }\n    }\n    \n    setLatLng(latlng: F.LatLng) {\n        this._original.setPosition(latlng.slice().reverse());\n        return this;\n    }\n\n    getLatLng(): F.LatLng {\n        let p =  this._original.getPosition();\n        return [p.lat, p.lng];\n    }\n}\n\n@eventBinder\nclass Polyline implements F.Polyline {\n    _id: string;\n    _original: AMap.Polyline;\n \n    constructor(latlngs: F.LatLng[], opt?: O.PolylineOption) {\n        let path = latlngs.map(latlng => {\n            return [latlng[1], latlng[0]];\n        });\n        let polylineOption = this.formatOpt(opt, path);\n        this._original = new AMap.Polyline(polylineOption);\n    }   \n\n    formatOpt (opt: O.PolylineOption = {}, path: number[][]) {\n        util.objectAssign(D.polyline, opt);\n        return {\n            path: path,\n            strokeColor: D.polyline.color,\n            strokeWeight: D.polyline.weight,\n            strokeOpacity: D.polyline.opacity\n        }\n    }\n\n    setPath(latlngs: F.LatLng[]) {\n        let points = latlngs.map(latlng => {\n            return [latlng[1], latlng[0]];\n        });\n        this._original.setPath(points);\n    }\n\n    getPath(): F.LatLng[] {\n        let points = this._original.getPath() || [];\n        return points.map(item => {\n            return [item.lat, item.lng]\n        });\n    }\n}\n\nclass Icon implements F.Icon {\n    _id: string;\n    _original: AMap.Icon;\n    anchor: F.Size;\n    \n    constructor(opt: O.IconOption) {\n        let iconOption = this.formatOpt(opt);\n        this._original = new AMap.Icon(iconOption);\n        this.anchor = opt.anchor;\n    }\n\n    formatOpt(opt: O.IconOption = {}) {\n        let image = opt.url;\n        let size = opt.size ? new AMap.Size(opt.size[0], opt.size[1]) : null;\n        return {\n            image: image,\n            size: size,\n            imageSize: size,\n        }\n    }\n\n    setImageUrl(url: string) {\n\n    }\n\n    setSize(size: F.Size) {\n\n    }\n\n    setAnchor(size: F.Size) {\n\n    }\n    \n    getImageUrl(): string {\n        return '';\n    }\n    \n    getAnchor(): F.Size {\n        return [];        \n    }\n    \n    getSize(): F.Size {\n        return [];\n    }\n}\n\nexport default class B_Map implements F.Factory {\n    Util: F.Util;\n\n    constructor () {\n        this.Util = {\n            formatEvent(e: any = {}): F.Event {\n                let point;\n                if (e.lnglat) {\n                    point = [e.lnglat.lat, e.lnglat.lng];\n                }\n                return {\n                    type: e.type.replace(/^on/g, ''),\n                    target: this,\n                    e: e,\n                    p: point\n                }\n            }\n        }\n    }\n\n    Map(opt: O.MapOption): Map {\n        return new Map(opt);\n    }\n\n    Marker(latlng: F.LatLng, opt?: O.MarkerOption): Marker {\n        return new Marker(latlng, opt);\n    }\n\n    Polyline(latlngs: F.LatLng[], opt: O.PolylineOption): Polyline {\n        return new Polyline(latlngs, opt);\n    }\n\n    Icon(opt: O.IconOption): Icon {\n        return new Icon(opt);\n    }\n    \n    // Load map script\n    load(key: string, resolve: Function, reject: Function): void {\n        if ((<any>window).AMap) {\n            resolve && resolve();\n            return;\n        }\n        let callbackName = 'map_init_' + Math.random().toString(16).substr(2);\n        let body = document.body;\n        let script = document.createElement(\"SCRIPT\");\n        let url = \"https://webapi.amap.com/maps?v=1.3&key=\" + key + \"&callback=\" + callbackName;\n        script.setAttribute(\"src\", url);\n        script.setAttribute(\"defer\", \"\");\n        script.setAttribute(\"async\", \"\");\n        body.appendChild(script);\n        (<any>window)[callbackName] = function () {\n            resolve && resolve();\n            delete (<any>window)[callbackName];\n        }\n    }\n};\n\n/**\n * @function Set overlay eventListener\n * @param {Function} constructor \n */\nfunction eventBinder(constructor: Function) {\n    constructor.prototype.on = function(eventName: string, handler: Function):  F.MapsEventListener {\n        let fn: Function = handler.bind(this);\n        let listener = this._original.on(eventName, fn);\n        return new F_MapsEventListener({\n            eventName: eventName,\n            host: this,\n            listener: listener,\n            handler: fn \n        });\n    }\n    // require MapEventListener\n    constructor.prototype.off = function(listener: F.MapsEventListener) {\n        this._original.off(listener.eventName, listener.handler);\n    }\n}","/// <reference path=\"./bmap.d.ts\" />\n\nimport F from '../../factory/index';\nimport F_MapsEventListener from '../../factory/mapsEventListener';\nimport * as O from '../../options/mapOptions';\nimport D from '../../options/default';\nimport util from '../../utils';\n\n// BMap in not defined in this file\n// But you will get this variable on window Object\n// while loaded baidu map script\n\n@eventBinder\nclass Map implements F.Map {\n    _original: BMap.Map;\n    _id: string;\n    MAP_TYPE: F.MapType;\n    \n    constructor(opt: O.MapOption) {\n        let centerPoint = new BMap.Point(opt.center[1] || 0, opt.center[0] || 0);\n        this._original = new BMap.Map(opt.container);\n        this._original.centerAndZoom(centerPoint, opt.zoom || 15);\n        this._original.enableScrollWheelZoom();\n        this.MAP_TYPE = {\n            HYBRID: 'HYBRID',\n            NORMAL: 'NORMAL',\n            SATELLITE: 'SATELLITE',\n            // TERRAIN: 'TERRAIN',\n        };\n    }\n\n    addLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                this._original.addOverlay(layer[i]._original);\n            }\n        } else {\n            this._original.addOverlay(layer._original);\n        }\n    }\n\n    removeLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                this._original.removeOverlay(layer[i]._original);\n            }\n        } else {\n            this._original.removeOverlay(layer._original);\n        }\n    }\n\n    clearLayers() {\n        this._original.clearOverlays();\n    }\n\n    setZoom(zoom: number) {\n        this._original.setZoom(zoom);\n    }\n\n    getZoom() {\n        return this._original.getZoom();\n    }\n    \n    zoomIn() {\n        this._original.zoomIn();\n    }\n    \n    zoomOut() {\n        this._original.zoomOut();\n    }\n\n    fitView(latlngs: F.LatLng[], opt?: O.ViewportOption) {\n        let points= latlngs.map(p => {\n            return {\n                lat: p[0],\n                lng: p[1]\n            }\n        });\n        this._original.setViewport(points);\n    }\n\n    setCenter(latlng: F.LatLng) {\n        this._original.setCenter({\n            lat: latlng[0],\n            lng: latlng[1]\n        });\n    }\n\n    getCenter(): F.LatLng {\n        let center = this._original.getCenter();\n        return [center.lat, center.lng];\n    }\n    \n    panTo(latlng: F.LatLng) {\n        this._original.panTo(new BMap.Point(latlng[1], latlng[0]));\n    }\n    \n    setMapType(type: string) {\n        let { MAP_TYPE } = this;\n        switch (type) {\n            case MAP_TYPE.HYBRID: {\n                this._original.setMapType(BMAP_HYBRID_MAP);\n                break;\n            }\n            case MAP_TYPE.NORMAL: {\n                this._original.setMapType(BMAP_NORMAL_MAP);\n                break;\n            }\n            case MAP_TYPE.SATELLITE: {\n                this._original.setMapType(BMAP_SATELLITE_MAP);\n                break;\n            }\n            case MAP_TYPE.TERRAIN: {\n                // TODO\n                break;\n            }\n        }\n    }\n}\n\n@eventBinder\nclass Marker implements F.Marker {\n    _id: string;\n    _original: BMap.Marker;\n\n    constructor(latlng: F.LatLng, opt?: O.MarkerOption) {\n        let point = new BMap.Point(latlng[1], latlng[0]);\n        let opts = this.formatOpt(opt);\n        this._original = new BMap.Marker(point, opts);\n    }\n\n    formatOpt (opt: O.MarkerOption = {}) {\n        return {\n            icon: opt.icon ? opt.icon._original : null,\n            // offset: opt.offset ? new BMap.Size(opt.offset[0], opt.offset[1]) : null,\n            raiseOnDrag: opt.raiseOnDrag ? opt.raiseOnDrag : true,\n            crossOnDrag: opt.crossOnDrag ? opt.crossOnDrag : true,\n            enableDragging: opt.draggable\n        }\n    }\n    \n    setLatLng(latlng: F.LatLng) {\n        let point = new BMap.Point(latlng[1], latlng[0]);\n        this._original.setPosition(point);\n        return this;\n    }\n\n    getLatLng(): F.LatLng {\n        let p =  this._original.getPosition();\n        return [p.lat, p.lng];\n    }\n}\n\n@eventBinder\nclass Polyline implements F.Polyline {\n    _id: string;\n    _original: BMap.Polyline;\n \n    constructor(latlngs: F.LatLng[], opt?: O.PolylineOption) {\n        let points = latlngs.map(latlng => {\n            return new BMap.Point(latlng[1], latlng[0]);\n        });\n        this._original = new BMap.Polyline(points, this.formatOpt(opt));\n    }   \n\n    formatOpt (opt: O.PolylineOption = {}) {\n        util.objectAssign(D.polyline, opt);\n        return {\n            strokeColor: D.polyline.color,\n            strokeWeight: D.polyline.weight,\n            strokeOpacity: D.polyline.opacity\n        }\n    }\n\n    setPath(latlngs: F.LatLng[]) {\n        let points = latlngs.map(latlng => {\n            return new BMap.Point(latlng[1], latlng[0]);\n        });\n        this._original.setPath(points);\n    }\n\n    getPath(): F.LatLng[] {\n        let points = this._original.getPath() || [];\n        return points.map(item => {\n            return [item.lat, item.lng]\n        });\n    }\n}\n\nclass Icon implements F.Icon {\n    _id: string;\n    _original: BMap.Icon;\n\n    constructor(opt: O.IconOption) {\n        let iconOption = this.formatOpt(opt);\n        this._original = new BMap.Icon(iconOption.url, iconOption.size, iconOption);\n    }\n\n    formatOpt(opt: O.IconOption = {}) {\n        return {\n            anchor: opt.anchor ? new BMap.Size(opt.anchor[0], opt.anchor[1]) : null,\n            url: opt.url,\n            size: opt.size ? new BMap.Size(opt.size[0], opt.size[1]) : null,\n        }\n    }\n\n    setImageUrl(url: string) {\n\n    }\n\n    setSize(size: F.Size) {\n\n    }\n\n    setAnchor(size: F.Size) {\n\n    }\n    \n    getImageUrl(): string {\n        return '';\n    }\n    \n    getAnchor(): F.Size {\n        return [];        \n    }\n    \n    getSize(): F.Size {\n        return [];\n    }\n}\n\nexport default class B_Map implements F.Factory {\n    Util: F.Util;\n\n    constructor () {\n        this.Util = {\n            formatEvent(e: any = {}): F.Event {\n                let point;\n                if (e.point) {\n                    point = [e.point.lat, e.point.lng];\n                }\n                return {\n                    type: e.type.replace(/^on/g, ''),\n                    target: this,\n                    e: e,\n                    p: point,\n                }\n            }\n        }\n    }\n\n    Map(opt: O.MapOption): Map {\n        return new Map(opt);\n    }\n\n    Marker(latlng: F.LatLng, opt?: O.MarkerOption): Marker {\n        return new Marker(latlng, opt);\n    }\n\n    Polyline(latlngs: F.LatLng[], opt: O.PolylineOption): Polyline {\n        return new Polyline(latlngs, opt);\n    }\n\n    Icon(opt: O.IconOption): Icon {\n        return new Icon(opt);\n    }\n    \n    // Load map script\n    load(key: string, resolve: Function, reject: Function): void {\n        if ((<any>window).BMap) {\n            resolve && resolve();\n            return;\n        }\n        let callbackName = 'map_init_' + Math.random().toString(16).substr(2);\n        let body = document.body;\n        let script = document.createElement(\"SCRIPT\");\n        let url = \"https://api.map.baidu.com/api?v=2.0&ak=\" + key + \"&callback=\" + callbackName;\n        script.setAttribute(\"src\", url);\n        script.setAttribute(\"defer\", \"\");\n        script.setAttribute(\"async\", \"\");\n        body.appendChild(script);\n        (<any>window)[callbackName] = function () {\n            resolve && resolve();\n            delete (<any>window)[callbackName];\n        }\n    }\n};\n\n/**\n * @function Set overlay eventListener\n * @param {Function} constructor \n */\nfunction eventBinder(constructor: Function) {\n    constructor.prototype.on = function(eventName: string, handler: Function):  F.MapsEventListener {\n        let fn: Function = handler.bind(this);\n        let listener = this._original.addEventListener(eventName, fn);\n        return new F_MapsEventListener({\n            eventName: eventName,\n            host: this,\n            listener: listener,\n            handler: fn \n        });\n    }\n    // require MapEventListener\n    constructor.prototype.off = function(listener: F.MapsEventListener) {\n        this._original.removeEventListener(listener.eventName, listener.handler);\n    }\n}\n","\nimport F from '../../factory/index';\nimport F_MapsEventListener from '../../factory/mapsEventListener';\nimport * as O from '../../options/mapOptions';\nimport D from '../../options/default';\nimport util from '../../utils';\n\n// google.maps in not defined in this file\n// But you will get this variable on window Object\n// while loaded google map script\n\n@eventBinder\nclass Map implements F.Map {\n    _original: google.maps.Map;\n    _id: string;\n    MAP_TYPE: F.MapType;\n    // _fitBound: google.maps.LatLngBounds;\n    \n    constructor(opt: O.MapOption) {\n        let centerPoint: google.maps.LatLng = new google.maps.LatLng(opt.center[0], opt.center[1]);\n        let container = typeof opt.container === 'string' ? document.getElementById(opt.container) : opt.container;\n        this._original = new google.maps.Map(container, {\n            zoom: opt.zoom,\n            center: centerPoint,\n            mapTypeControl: false,\n            fullscreenControl: false,\n            scaleControl: false,\n            streetViewControl: false,\n            zoomControl: false\n        });\n        this.MAP_TYPE = {\n            HYBRID: 'HYBRID',\n            NORMAL: 'NORMAL',\n            TERRAIN: 'TERRAIN',\n            SATELLITE: 'SATELLITE',\n        };\n    }\n\n    addLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(this._original);\n            }\n        } else {\n            layer._original.setMap(this._original);\n        }\n    }\n\n    removeLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(null);\n            }\n        } else {\n            layer._original.setMap(null);\n        }\n    }\n\n    clearLayers() {\n        this._original.clearOverlays();\n    }\n\n    setZoom(zoom: number) {\n        this._original.setZoom(zoom);\n    }\n\n    getZoom() {\n        return this._original.getZoom();\n    }\n\n    zoomIn() {\n        this.setZoom(this.getZoom() + 1);\n    }\n    \n    zoomOut() {\n        this.setZoom(this.getZoom() - 1);\n    }\n    \n    fitView(latlngs: F.LatLng[], opt?: O.ViewportOption) {\n        let bound = util.getBound(latlngs).map(p => {\n            return new google.maps.LatLng(p[0], p[1]);\n        });\n        let googleBound = new google.maps.LatLngBounds(bound[0], bound[1]);\n        this._original.fitBounds(googleBound);\n    }\n\n    setCenter(latlng: F.LatLng) {\n        this._original.setCenter({\n            lat: latlng[0],\n            lng: latlng[1]\n        });\n    }\n    \n    setMapType(type: string) {\n        let { MAP_TYPE } = this;\n        switch (type) {\n            case MAP_TYPE.HYBRID: {\n                this._original.setMapTypeId(google.maps.MapTypeId.HYBRID);\n                break;\n            }\n            case MAP_TYPE.NORMAL: {\n                this._original.setMapTypeId(google.maps.MapTypeId.ROADMAP);\n                break;\n            }\n            case MAP_TYPE.SATELLITE: {\n                this._original.setMapTypeId(google.maps.MapTypeId.SATELLITE);\n                break;\n            }\n            case MAP_TYPE.TERRAIN: {\n                this._original.setMapTypeId(google.maps.MapTypeId.TERRAIN);\n                break;\n            }\n        }\n    }\n\n    getCenter(): F.LatLng {\n        let center = this._original.getCenter();\n        return [center.lat(), center.lng()];\n    }\n    \n    panTo(latlng: F.LatLng): void {\n        this._original.panTo(new google.maps.LatLng(latlng[0], latlng[1]));\n    }\n}\n\n@eventBinder\nclass Marker implements F.Marker {\n    _id: string;\n    _original: google.maps.Marker;\n\n    constructor(latlng: F.LatLng, opt?: O.MarkerOption) {\n        let point = new google.maps.LatLng(latlng[0], latlng[1]);\n        let opts = this.formatOpt(opt, point);\n        this._original = new google.maps.Marker(opts);\n    }\n\n    formatOpt (opt: O.MarkerOption = {}, p: google.maps.LatLng) {\n        return {\n            icon: opt.icon ? opt.icon._original : null,\n            position: p,\n            // offset: opt.offset ? new google.maps.Size(opt.offset[0], opt.offset[1]) : null,\n            raiseOnDrag: opt.raiseOnDrag ? opt.raiseOnDrag : true,\n            crossOnDrag: opt.crossOnDrag ? opt.crossOnDrag : true,\n            draggable: opt.draggable\n        }\n    }\n    \n    setLatLng(latlng: F.LatLng) {\n        let point = new google.maps.LatLng(latlng[0], latlng[1]);\n        this._original.setPosition(point);\n        return this;\n    }\n\n    getLatLng(): F.LatLng {\n        let p =  this._original.getPosition();\n        return [p.lat(), p.lng()];\n    }\n    \n    // TODO: change draggable property \n}\n\n@eventBinder\nclass Polyline implements F.Polyline {\n    _id: string;\n    _original: google.maps.Polyline;\n \n    constructor(latlngs: F.LatLng[], opt?: O.PolylineOption) {\n        let path = latlngs.map(latlng => {\n            return new google.maps.LatLng(latlng[0], latlng[1]);\n        });\n        this._original = new google.maps.Polyline(this.formatOpt(opt, path));\n    }   \n\n    formatOpt (opt: O.PolylineOption = {}, path: google.maps.LatLng[]) {\n        util.objectAssign(D.polyline, opt);\n        return {\n            path: path,\n            strokeColor: D.polyline.color,\n            strokeWeight: D.polyline.weight,\n            strokeOpacity: D.polyline.opacity\n        }\n    }\n\n    setPath(latlngs: F.LatLng[]) {\n        let path = latlngs.map(latlng => {\n            return new google.maps.LatLng(latlng[0], latlng[1]);\n        });\n        this._original.setPath(path);\n    }\n\n    getPath(): F.LatLng[] {\n        let points: google.maps.MVCArray<google.maps.LatLng> = this._original.getPath();\n        return points.getArray().map(item => {\n            return [item.lat(), item.lng()]\n        });\n    }\n}\n\nclass Icon implements F.Icon {\n    _id: string;\n    _original: google.maps.Icon;\n\n    constructor(opt: O.IconOption) {\n        let iconOption = this.formatOpt(opt);\n        this._original = {\n            url: iconOption.url,\n            size: iconOption.size,\n            anchor: iconOption.anchor,\n        };\n    }\n\n    formatOpt(opt: O.IconOption = {}) {\n        return {\n            anchor: opt.anchor ? new google.maps.Point(opt.anchor[0], opt.anchor[1]) : null,\n            url: opt.url,\n            size: opt.size ? new google.maps.Size(opt.size[0], opt.size[1]) : null,\n        }\n    }\n\n    setImageUrl(url: string) {\n\n    }\n\n    setSize(size: F.Size) {\n\n    }\n\n    setAnchor(size: F.Size) {\n\n    }\n    \n    getImageUrl(): string {\n        return '';\n    }\n    \n    getAnchor(): F.Size {\n        return [];        \n    }\n    \n    getSize(): F.Size {\n        return [];\n    }\n}\n\nexport default class G_Map implements F.Factory {\n    Util: F.Util;\n\n    constructor () {\n        this.Util = {\n            formatEvent(e: any = {}): F.Event {\n                let point;\n                if (e.latLng) {\n                    point = [e.latLng.lat(), e.latLng.lng()];\n                }            \n                return {\n                    type: e.ta && e.ta.type,\n                    target: this,\n                    e: e,\n                    p: point,\n                }\n            }\n        }\n    }\n\n    Map(opt: O.MapOption): Map {\n        return new Map(opt);\n    }\n\n    Marker(latlng: F.LatLng, opt?: O.MarkerOption): Marker {\n        return new Marker(latlng, opt);\n    }\n\n    Polyline(latlngs: F.LatLng[], opt: O.PolylineOption): Polyline {\n        return new Polyline(latlngs, opt);\n    }\n\n    Icon(opt: O.IconOption): Icon {\n        return new Icon(opt);\n    }\n    \n    // Load map script\n    load(key: string, resolve: Function, reject: Function): void {\n        if ((<any>window).google.maps) {\n            resolve && resolve();\n            return;\n        }\n        let callbackName = 'map_init_' + Math.random().toString(16).substr(2);\n        let body = document.body;\n        let script = document.createElement(\"SCRIPT\");\n        let url = \"https://maps.googleapis.com/maps/api/js?key=\" + key + \"&callback=\" + callbackName;\n        script.setAttribute(\"src\", url);\n        script.setAttribute(\"defer\", \"\");\n        script.setAttribute(\"async\", \"\");\n        body.appendChild(script);\n        (<any>window)[callbackName] = function () {\n            resolve && resolve();\n            delete (<any>window)[callbackName];\n        }\n    }\n}\n\n/**\n * @function set overlay eventListener\n * @param {Function} constructor \n */\nfunction eventBinder(constructor: Function) {\n    // return MapEventListener\n    constructor.prototype.on = function(eventName: string, handler: Function):  F.MapsEventListener {\n        let fn: Function = handler.bind(this);\n        let listener: google.maps.MapsEventListener = this._original.addListener(eventName, fn);\n        return new F_MapsEventListener({\n            eventName: eventName,\n            host: this,\n            listener: listener,\n            handler: fn \n        });\n    }\n    // require MapEventListener\n    constructor.prototype.off = function(listener: F.MapsEventListener) {\n        google.maps.event.removeListener(listener.listener);\n    }\n}\n\n\n\n","import F from './factory/index';\nimport LatLng from './factory/latlng';\nimport O from './options/mapOptions';\nimport A_Map from './constructors/amap/index';      // gaode map\nimport B_Map from './constructors/bmap/index';      // baidu map\nimport G_Map from './constructors/gmap/index';      // google map\nimport util from './utils';\n// Error with import require: can not find module 'object-assign'\n// import objectAssign = require('object-assign');\n\nexport default class Plain {\n    FACTORYS: {[key: string]: F.Factory};\n    Util: F.Util;\n    map: object;\n    factory: F.Factory;          \n    \n    constructor(factory?: F.Factory | string) {\n        let that = this;\n        factory && this.use(factory);\n        // Various utility functions\n        this.Util = {\n            formatEvent(e: any): F.Event {\n                return that.factory.Util.formatEvent.call(this, e);\n            }\n        }\n        util.objectAssign(this.Util, util);\n    }\n\n    // Load the map factory plugin\n    use(factory: F.Factory | string, key?: string): Plain {\n        if(typeof factory === 'string') {\n            switch (factory) {\n                case 'BMAP': {\n                    this.factory = new B_Map();\n                    break;\n                }\n                case 'GMAP': {\n                    this.factory = new G_Map();\n                    break;\n                }\n                case 'AMAP': {\n                    this.factory = new A_Map();    \n                    break;\n                }\n                case 'LMAP': {\n                    // this.factory = new L_Map();\n                }\n            }\n        } else {\n            this.factory = factory;\n        }\n        return this;\n    }\n\n    // Create Map\n    @tagging()\n    Map([opt] : [O.MapOption]) {\n        return this.factory.Map(opt);\n    }\n\n    // Create Marker\n    @tagging()\n    Marker([latlng, opt] : [LatLng, O.MarkerOption]) {\n        return this.factory.Marker(latlng, opt);\n    }\n\n    // Create Polyline\n    @tagging()\n    Polyline([latlngs, opt] : [LatLng[], O.PolylineOption]) {\n        return this.factory.Polyline(latlngs, opt);\n    }\n\n    // Create Icon\n    @tagging()\n    Icon([opt] : [O.IconOption]) {\n        return this.factory.Icon(opt);\n    }\n    \n    loadMap(key: string, resolve: Function, reject: Function): void {\n        this.factory.load(key, resolve, reject);\n    }\n}\n\n/**\n * @function set _id property\n */\nfunction tagging(): Function {\n    return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n        let oldFn = descriptor.value;\n        descriptor.value= function(...arg: any[]) {\n            let value = oldFn.call(this, arg);\n            value._id = Math.random().toString(16).substr(2);\n            return value;  \n        };\n    }\n}\n\n"],"names":["F_MapsEventListener","eventBinder","Map","Marker","Polyline","Icon","B_Map","A_Map"],"mappings":"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"}