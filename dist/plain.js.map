{"version":3,"file":"plain.js","sources":["../src/constructors/amap/index.ts","../src/constructors/bmap/index.ts","../src/constructors/gmap/index.ts","../src/plain.ts","../src/var.ts","../src/factory/mapsEventListener.ts","../src/options/default.ts","../src/coordtransform.ts","../src/utils.ts"],"sourcesContent":["/// <reference path=\"./amap.d.ts\" />\n\nimport F from '../../factory/index';\nimport F_MapsEventListener from '../../factory/mapsEventListener';\nimport * as O from '../../options/mapOptions';\nimport D from '../../options/default';\nimport util from '../../utils';\n\n// AMap in not defined in this file\n// But you will get this variable on window Object\n// while loaded baidu map script\n// NOTICE: AMap library will cause memory leak !!\n\n@eventBinder\nclass Map implements F.Map {\n    _original: AMap.Map;\n    _id: string;\n    MAP_TYPE: F.MapType;\n    \n    private _boundMarkers: AMap.Marker[];      // For set Viewport\n    private _boundIcon: AMap.Icon;             // For set Viewport\n    \n    constructor(opt: O.MapOption) {\n        this.MAP_TYPE = {\n            HYBRID: 'HYBRID',\n            NORMAL: 'NORMAL',\n            SATELLITE: 'SATELLITE',\n            // TERRAIN: 'TERRAIN',\n        };\n        this._original = new AMap.Map(opt.container, {\n            zoom: opt.zoom,\n            center: opt.center.slice().reverse(),\n        });\n    }\n\n    addLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(this._original);\n            }\n        } else {\n            layer._original.setMap(this._original);\n        }\n    }\n\n    removeLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(null);\n            }\n        } else {\n            layer._original.setMap(null);\n        }\n    }\n\n    clearLayers() {\n        this._original.clearMap();\n    }\n\n    setZoom(zoom: number) {\n        this._original.setZoom(zoom);\n    }\n\n    getZoom() {\n        return this._original.getZoom();\n    }\n\n    zoomIn() {\n        this._original.zoomIn();    \n    }\n    \n    zoomOut() {\n        this._original.zoomOut();\n    }\n    \n    fitView(latlngs: F.LatLng[], opt?: O.ViewportOption) {\n        let bound = util.getBound(latlngs);     // length === 2\n        if (this._boundMarkers) {\n            bound.map((p, i, arr) => {\n                this._boundMarkers[i].setPosition([p[1], p[0]]);\n            });\n        } else {\n            this._boundIcon = new AMap.Icon({\n                size: new AMap.Size(0, 0)\n            });\n            this._boundMarkers = bound.map(latlng => {\n                return new AMap.Marker({\n                    map: this._original,\n                    icon: this._boundIcon,\n                    position: [latlng[1], latlng[0]],\n                });\n            });\n        }\n        this._original.setFitView(this._boundMarkers);\n        // Release memory\n        this._original.remove(this._boundMarkers);\n    }\n\n    setCenter(latlng: F.LatLng) {\n        this._original.setCenter(new AMap.LngLat(latlng[1], latlng[0]));\n    }\n\n    getCenter(): F.LatLng {\n        let center = this._original.getCenter();\n        return [center.lat, center.lng];\n    }\n    \n    panTo(latlng: F.LatLng) {\n        this._original.panTo(latlng.slice().reverse());\n    }\n    \n    setMapType(type: string) {\n        let { MAP_TYPE } = this;\n        switch (type) {\n            case MAP_TYPE.HYBRID: {\n                this._original.setLayers([new AMap.TileLayer.Satellite(), new AMap.TileLayer.RoadNet()]);\n                break;\n            }\n            case MAP_TYPE.NORMAL: {\n                this._original.setLayers([new AMap.TileLayer()]);\n                break;\n            }\n            case MAP_TYPE.SATELLITE: {\n                this._original.setLayers([new AMap.TileLayer.Satellite()]);\n                break;\n            }\n            case MAP_TYPE.TERRAIN: {\n                // TODO\n                break;\n            }\n        }\n    }\n}\n\n@eventBinder\nclass Marker implements F.Marker {\n    _id: string;\n    _original: AMap.Marker;\n\n    constructor(latlng: F.LatLng, opt?: O.MarkerOption) {\n        let opts: AMap.MarkerOptions = this.formatOpt(opt, latlng);\n        this._original = new AMap.Marker(opts);\n    }\n\n    formatOpt (opt: O.MarkerOption = {}, latlng: F.LatLng): object {\n        let option = {\n            map: null,\n            position: [latlng[1], latlng[0]],\n            icon: opt.icon ? opt.icon._original : null,\n            raiseOnDrag: opt.raiseOnDrag ? opt.raiseOnDrag : true,\n            crossOnDrag: opt.crossOnDrag ? opt.crossOnDrag : true,\n            draggable: opt.draggable\n        }\n        // 19 31\n        if (opt.icon && opt.icon.anchor) {\n            option.offset = new AMap.Pixel(-opt.icon.anchor[0], -opt.icon.anchor[1]);  \n        }\n        return option;\n    }\n    \n    setLatLng(latlng: F.LatLng) {\n        this._original.setPosition(latlng.slice().reverse());\n        return this;\n    }\n\n    getLatLng(): F.LatLng {\n        let p =  this._original.getPosition();\n        return [p.lat, p.lng];\n    }\n}\n\n@eventBinder\nclass Polyline implements F.Polyline {\n    _id: string;\n    _original: AMap.Polyline;\n \n    constructor(latlngs: F.LatLng[], opt?: O.PolylineOption) {\n        let path = latlngs.map(latlng => {\n            return [latlng[1], latlng[0]];\n        });\n        let polylineOption = this.formatOpt(opt, path);\n        this._original = new AMap.Polyline(polylineOption);\n    }   \n\n    formatOpt (opt: O.PolylineOption = {}, path: number[][]) {\n        util.objectAssign(D.polyline, opt);\n        return {\n            path: path,\n            strokeColor: D.polyline.color,\n            strokeWeight: D.polyline.weight,\n            strokeOpacity: D.polyline.opacity\n        }\n    }\n\n    setPath(latlngs: F.LatLng[]) {\n        let points = latlngs.map(latlng => {\n            return [latlng[1], latlng[0]];\n        });\n        this._original.setPath(points);\n    }\n\n    getPath(): F.LatLng[] {\n        let points = this._original.getPath() || [];\n        return points.map(item => {\n            return [item.lat, item.lng]\n        });\n    }\n}\n\nclass Icon implements F.Icon {\n    _id: string;\n    _original: AMap.Icon;\n    anchor: F.Size;\n    \n    constructor(opt: O.IconOption) {\n        let iconOption = this.formatOpt(opt);\n        this._original = new AMap.Icon(iconOption);\n        this.anchor = opt.anchor;\n    }\n\n    formatOpt(opt: O.IconOption = {}) {\n        let image = opt.url;\n        let size = opt.size ? new AMap.Size(opt.size[0], opt.size[1]) : null;\n        return {\n            image: image,\n            size: size,\n            imageSize: size,\n        }\n    }\n\n    setImageUrl(url: string) {\n\n    }\n\n    setSize(size: F.Size) {\n\n    }\n\n    setAnchor(size: F.Size) {\n\n    }\n    \n    getImageUrl(): string {\n        return '';\n    }\n    \n    getAnchor(): F.Size {\n        return [];        \n    }\n    \n    getSize(): F.Size {\n        return [];\n    }\n}\n\nexport default class B_Map implements F.Factory {\n    Util: F.Util;\n\n    constructor () {\n        this.Util = {\n            formatEvent(e: any = {}): F.Event {\n                let point;\n                if (e.lnglat) {\n                    point = [e.lnglat.lat, e.lnglat.lng];\n                }\n                return {\n                    type: e.type.replace(/^on/g, ''),\n                    target: this,\n                    e: e,\n                    p: point\n                }\n            }\n        }\n    }\n\n    Map(opt: O.MapOption): Map {\n        return new Map(opt);\n    }\n\n    Marker(latlng: F.LatLng, opt?: O.MarkerOption): Marker {\n        return new Marker(latlng, opt);\n    }\n\n    Polyline(latlngs: F.LatLng[], opt: O.PolylineOption): Polyline {\n        return new Polyline(latlngs, opt);\n    }\n\n    Icon(opt: O.IconOption): Icon {\n        return new Icon(opt);\n    }\n    \n    // Load map script\n    load(key: string, resolve: Function, reject: Function): void {\n        if ((<any>window).AMap) {\n            resolve && resolve();\n            return;\n        }\n        let callbackName = 'map_init_' + Math.random().toString(16).substr(2);\n        let body = document.body;\n        let script = document.createElement(\"SCRIPT\");\n        let url = \"https://webapi.amap.com/maps?v=1.3&key=\" + key + \"&callback=\" + callbackName;\n        script.setAttribute(\"src\", url);\n        script.setAttribute(\"defer\", \"\");\n        script.setAttribute(\"async\", \"\");\n        body.appendChild(script);\n        (<any>window)[callbackName] = function () {\n            resolve && resolve();\n            delete (<any>window)[callbackName];\n        }\n    }\n};\n\n/**\n * @function Set overlay eventListener\n * @param {Function} constructor \n */\nfunction eventBinder(constructor: Function) {\n    constructor.prototype.on = function(eventName: string, handler: Function):  F.MapsEventListener {\n        let fn: Function = handler.bind(this);\n        let listener = this._original.on(eventName, fn);\n        return new F_MapsEventListener({\n            eventName: eventName,\n            host: this,\n            listener: listener,\n            handler: fn \n        });\n    }\n    // require MapEventListener\n    constructor.prototype.off = function(listener: F.MapsEventListener) {\n        this._original.off(listener.eventName, listener.handler);\n    }\n}","/// <reference path=\"./bmap.d.ts\" />\n\nimport V from '../../var';\nimport F from '../../factory/index';\nimport F_MapsEventListener from '../../factory/mapsEventListener';\nimport * as O from '../../options/mapOptions';\nimport D from '../../options/default';\nimport util from '../../utils';\n\n// BMap in not defined in this file\n// But you will get this variable on window Object\n// while loaded baidu map script\n\n@eventBinder\nclass Map implements F.Map {\n    _original: BMap.Map;\n    _id: string;\n    MAP_TYPE: F.MapType;\n    \n    constructor(opt: O.MapOption) {\n        let center = opt.center ? fixCoord(opt.center) : [0, 0];\n        let centerPoint = new BMap.Point(center[1], center[0]);\n        this._original = new BMap.Map(opt.container);\n        this._original.centerAndZoom(centerPoint, opt.zoom || 15);\n        this._original.enableScrollWheelZoom();\n        this.MAP_TYPE = {\n            HYBRID: 'HYBRID',\n            NORMAL: 'NORMAL',\n            SATELLITE: 'SATELLITE',\n            // TERRAIN: 'TERRAIN',\n        };\n    }\n\n    addLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                this._original.addOverlay(layer[i]._original);\n            }\n        } else {\n            this._original.addOverlay(layer._original);\n        }\n    }\n\n    removeLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                this._original.removeOverlay(layer[i]._original);\n            }\n        } else {\n            this._original.removeOverlay(layer._original);\n        }\n    }\n\n    clearLayers() {\n        this._original.clearOverlays();\n    }\n\n    setZoom(zoom: number) {\n        this._original.setZoom(zoom);\n    }\n\n    getZoom() {\n        return this._original.getZoom();\n    }\n    \n    zoomIn() {\n        this._original.zoomIn();\n    }\n    \n    zoomOut() {\n        this._original.zoomOut();\n    }\n\n    fitView(latlngs: F.LatLng[], opt?: O.ViewportOption) {\n        let points= latlngs.map(p => {\n            return {\n                lat: p[0],\n                lng: p[1]\n            }\n        });\n        this._original.setViewport(points);\n    }\n\n    setCenter(latlng: F.LatLng) {\n        latlng = <F.LatLng>fixCoord(latlng);\n        this._original.setCenter({\n            lat: latlng[0],\n            lng: latlng[1]\n        });\n    }\n\n    getCenter(): F.LatLng {\n        let center = this._original.getCenter();\n        return [center.lat, center.lng];\n    }\n    \n    panTo(latlng: F.LatLng) {\n        this._original.panTo(new BMap.Point(latlng[1], latlng[0]));\n    }\n    \n    setMapType(type: string) {\n        let { MAP_TYPE } = this;\n        switch (type) {\n            case MAP_TYPE.HYBRID: {\n                this._original.setMapType(BMAP_HYBRID_MAP);\n                break;\n            }\n            case MAP_TYPE.NORMAL: {\n                this._original.setMapType(BMAP_NORMAL_MAP);\n                break;\n            }\n            case MAP_TYPE.SATELLITE: {\n                this._original.setMapType(BMAP_SATELLITE_MAP);\n                break;\n            }\n            case MAP_TYPE.TERRAIN: {\n                // TODO\n                break;\n            }\n        }\n    }\n}\n\n@eventBinder\nclass Marker implements F.Marker {\n    _id: string;\n    _original: BMap.Marker;\n\n    constructor(latlng: F.LatLng, opt?: O.MarkerOption) {\n        latlng = <F.LatLng>fixCoord(latlng);\n        let point = new BMap.Point(latlng[1], latlng[0]);\n        let opts = this.formatOpt(opt);\n        this._original = new BMap.Marker(point, opts);\n    }\n\n    formatOpt (opt: O.MarkerOption = {}) {\n        return {\n            icon: opt.icon ? opt.icon._original : null,\n            // offset: opt.offset ? new BMap.Size(opt.offset[0], opt.offset[1]) : null,\n            raiseOnDrag: opt.raiseOnDrag ? opt.raiseOnDrag : true,\n            crossOnDrag: opt.crossOnDrag ? opt.crossOnDrag : true,\n            enableDragging: opt.draggable\n        }\n    }\n    \n    setLatLng(latlng: F.LatLng) {\n        latlng = <F.LatLng>fixCoord(latlng);\n        let point = new BMap.Point(latlng[1], latlng[0]);\n        this._original.setPosition(point);\n        return this;\n    }\n\n    getLatLng(): F.LatLng {\n        let p =  this._original.getPosition();\n        return <F.LatLng>fixCoord([p.lat, p.lng], 'output');\n    }\n}\n\n@eventBinder\nclass Polyline implements F.Polyline {\n    _id: string;\n    _original: BMap.Polyline;\n \n    constructor(latlngs: F.LatLng[], opt?: O.PolylineOption) {\n        let points = (<F.LatLng[]>fixCoord(latlngs)).map(latlng => {\n            return new BMap.Point(latlng[1], latlng[0]);\n        });\n        this._original = new BMap.Polyline(points, this.formatOpt(opt));\n    }   \n\n    formatOpt (opt: O.PolylineOption = {}) {\n        util.objectAssign(D.polyline, opt);\n        return {\n            strokeColor: D.polyline.color,\n            strokeWeight: D.polyline.weight,\n            strokeOpacity: D.polyline.opacity\n        }\n    }\n\n    setPath(latlngs: F.LatLng[]): void {\n        let points =  (<F.LatLng[]>fixCoord(latlngs)).map(latlng => {\n            return new BMap.Point(latlng[1], latlng[0]);\n        });\n        this._original.setPath(points);\n    }\n\n    getPath(): F.LatLng[] {\n        let points = this._original.getPath() || [];\n        return <F.LatLng[]>fixCoord(points.map(item => {\n            return [item.lat, item.lng]\n        }), 'output');\n    }\n}\n\nclass Icon implements F.Icon {\n    _id: string;\n    _original: BMap.Icon;\n\n    constructor(opt: O.IconOption) {\n        let iconOption = this.formatOpt(opt);\n        this._original = new BMap.Icon(iconOption.url, iconOption.size, iconOption);\n    }\n\n    formatOpt(opt: O.IconOption = {}) {\n        return {\n            anchor: opt.anchor ? new BMap.Size(opt.anchor[0], opt.anchor[1]) : null,\n            url: opt.url,\n            size: opt.size ? new BMap.Size(opt.size[0], opt.size[1]) : null,\n        }\n    }\n\n    setImageUrl(url: string) {\n\n    }\n\n    setSize(size: F.Size) {\n\n    }\n\n    setAnchor(size: F.Size) {\n\n    }\n    \n    getImageUrl(): string {\n        return '';\n    }\n    \n    getAnchor(): F.Size {\n        return [];        \n    }\n    \n    getSize(): F.Size {\n        return [];\n    }\n}\n\nexport default class B_Map implements F.Factory {\n    Util: F.Util;\n\n    constructor () {\n        this.Util = {\n            formatEvent(e: any = {}): F.Event {\n                let point;\n                if (e.point) {\n                    point = [e.point.lat, e.point.lng];\n                }\n                return {\n                    type: e.type.replace(/^on/g, ''),\n                    target: this,\n                    e: e,\n                    p: point,\n                }\n            }\n        }\n    }\n\n    Map(opt: O.MapOption): Map {\n        return new Map(opt);\n    }\n\n    Marker(latlng: F.LatLng, opt?: O.MarkerOption): Marker {\n        return new Marker(latlng, opt);\n    }\n\n    Polyline(latlngs: F.LatLng[], opt: O.PolylineOption): Polyline {\n        return new Polyline(latlngs, opt);\n    }\n\n    Icon(opt: O.IconOption): Icon {\n        return new Icon(opt);\n    }\n    \n    // Load map script\n    load(key: string, resolve: Function, reject: Function): void {\n        if ((<any>window).BMap) {\n            resolve && resolve();\n            return;\n        }\n        let callbackName = 'map_init_' + Math.random().toString(16).substr(2);\n        let body = document.body;\n        let script = document.createElement(\"SCRIPT\");\n        let url = \"https://api.map.baidu.com/api?v=2.0&ak=\" + key + \"&callback=\" + callbackName;\n        script.setAttribute(\"src\", url);\n        script.setAttribute(\"defer\", \"\");\n        script.setAttribute(\"async\", \"\");\n        body.appendChild(script);\n        (<any>window)[callbackName] = function () {\n            resolve && resolve();\n            delete (<any>window)[callbackName];\n        }\n    }\n};\n\n/**\n * @function Set overlay eventListener\n * @param {Function} constructor \n */\nfunction eventBinder(constructor: Function) {\n    constructor.prototype.on = function(eventName: string, handler: Function):  F.MapsEventListener {\n        let fn: Function = handler.bind(this);\n        let listener = this._original.addEventListener(eventName, fn);\n        return new F_MapsEventListener({\n            eventName: eventName,\n            host: this,\n            listener: listener,\n            handler: fn \n        });\n    }\n    // require MapEventListener\n    constructor.prototype.off = function(listener: F.MapsEventListener) {\n        this._original.removeEventListener(listener.eventName, listener.handler);\n    }\n}\n\nfunction fixCoord (latlngs: F.LatLng[] | F.LatLng, type?: string): F.LatLng[] | F.LatLng {\n    if (type === 'output') {\n        if (V.coordType === 'DEFAULT') {\n            return latlngs;\n        }\n        switch (V.coordType) {\n            case ('DEFAULT'): {\n                return latlngs;\n            }\n            case ('GCJ02'): {\n                return util.b2g(<F.LatLng[]>latlngs);\n            }\n            case ('BD09'): {\n                return latlngs;\n            }\n            case ('WGS84'): {\n                return util.b2w(<F.LatLng[]>latlngs);\n            }\n        }\n    } else {\n        if (V.coordType === 'DEFAULT') {\n            return latlngs;\n        }\n        switch (V.coordType) {\n            case ('DEFAULT'): {\n                return latlngs;\n            }\n            case ('GCJ02'): {\n                return util.g2b(<F.LatLng[]>latlngs);\n            }\n            case ('BD09'): {\n                return latlngs;\n            }\n            case ('WGS84'): {\n                return util.w2b(<F.LatLng[]>latlngs);\n            }\n        }\n    } \n}","\nimport F from '../../factory/index';\nimport F_MapsEventListener from '../../factory/mapsEventListener';\nimport * as O from '../../options/mapOptions';\nimport D from '../../options/default';\nimport util from '../../utils';\n\n// google.maps in not defined in this file\n// But you will get this variable on window Object\n// while loaded google map script\n\n@eventBinder\nclass Map implements F.Map {\n    _original: google.maps.Map;\n    _id: string;\n    MAP_TYPE: F.MapType;\n    // _fitBound: google.maps.LatLngBounds;\n    \n    constructor(opt: O.MapOption) {\n        let centerPoint: google.maps.LatLng = new google.maps.LatLng(opt.center[0], opt.center[1]);\n        let container = typeof opt.container === 'string' ? document.getElementById(opt.container) : opt.container;\n        this._original = new google.maps.Map(container, {\n            zoom: opt.zoom,\n            center: centerPoint,\n            mapTypeControl: false,\n            fullscreenControl: false,\n            scaleControl: false,\n            streetViewControl: false,\n            zoomControl: false\n        });\n        this.MAP_TYPE = {\n            HYBRID: 'HYBRID',\n            NORMAL: 'NORMAL',\n            TERRAIN: 'TERRAIN',\n            SATELLITE: 'SATELLITE',\n        };\n    }\n\n    addLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(this._original);\n            }\n        } else {\n            layer._original.setMap(this._original);\n        }\n    }\n\n    removeLayer(layer: F.Layer | Array<F.Layer>) {\n        if (layer instanceof Array) {\n            for (let i = 0; i < layer.length; i++) {\n                layer[i]._original.setMap(null);\n            }\n        } else {\n            layer._original.setMap(null);\n        }\n    }\n\n    clearLayers() {\n        this._original.clearOverlays();\n    }\n\n    setZoom(zoom: number) {\n        this._original.setZoom(zoom);\n    }\n\n    getZoom() {\n        return this._original.getZoom();\n    }\n\n    zoomIn() {\n        this.setZoom(this.getZoom() + 1);\n    }\n    \n    zoomOut() {\n        this.setZoom(this.getZoom() - 1);\n    }\n    \n    fitView(latlngs: F.LatLng[], opt?: O.ViewportOption) {\n        let bound = util.getBound(latlngs).map(p => {\n            return new google.maps.LatLng(p[0], p[1]);\n        });\n        let googleBound = new google.maps.LatLngBounds(bound[0], bound[1]);\n        this._original.fitBounds(googleBound);\n    }\n\n    setCenter(latlng: F.LatLng) {\n        this._original.setCenter({\n            lat: latlng[0],\n            lng: latlng[1]\n        });\n    }\n    \n    setMapType(type: string) {\n        let { MAP_TYPE } = this;\n        switch (type) {\n            case MAP_TYPE.HYBRID: {\n                this._original.setMapTypeId(google.maps.MapTypeId.HYBRID);\n                break;\n            }\n            case MAP_TYPE.NORMAL: {\n                this._original.setMapTypeId(google.maps.MapTypeId.ROADMAP);\n                break;\n            }\n            case MAP_TYPE.SATELLITE: {\n                this._original.setMapTypeId(google.maps.MapTypeId.SATELLITE);\n                break;\n            }\n            case MAP_TYPE.TERRAIN: {\n                this._original.setMapTypeId(google.maps.MapTypeId.TERRAIN);\n                break;\n            }\n        }\n    }\n\n    getCenter(): F.LatLng {\n        let center = this._original.getCenter();\n        return [center.lat(), center.lng()];\n    }\n    \n    panTo(latlng: F.LatLng): void {\n        this._original.panTo(new google.maps.LatLng(latlng[0], latlng[1]));\n    }\n}\n\n@eventBinder\nclass Marker implements F.Marker {\n    _id: string;\n    _original: google.maps.Marker;\n\n    constructor(latlng: F.LatLng, opt?: O.MarkerOption) {\n        let point = new google.maps.LatLng(latlng[0], latlng[1]);\n        let opts = this.formatOpt(opt, point);\n        this._original = new google.maps.Marker(opts);\n    }\n\n    formatOpt (opt: O.MarkerOption = {}, p: google.maps.LatLng) {\n        return {\n            icon: opt.icon ? opt.icon._original : null,\n            position: p,\n            // offset: opt.offset ? new google.maps.Size(opt.offset[0], opt.offset[1]) : null,\n            raiseOnDrag: opt.raiseOnDrag ? opt.raiseOnDrag : true,\n            crossOnDrag: opt.crossOnDrag ? opt.crossOnDrag : true,\n            draggable: opt.draggable\n        }\n    }\n    \n    setLatLng(latlng: F.LatLng) {\n        let point = new google.maps.LatLng(latlng[0], latlng[1]);\n        this._original.setPosition(point);\n        return this;\n    }\n\n    getLatLng(): F.LatLng {\n        let p =  this._original.getPosition();\n        return [p.lat(), p.lng()];\n    }\n    \n    // TODO: change draggable property \n}\n\n@eventBinder\nclass Polyline implements F.Polyline {\n    _id: string;\n    _original: google.maps.Polyline;\n \n    constructor(latlngs: F.LatLng[], opt?: O.PolylineOption) {\n        let path = latlngs.map(latlng => {\n            return new google.maps.LatLng(latlng[0], latlng[1]);\n        });\n        this._original = new google.maps.Polyline(this.formatOpt(opt, path));\n    }   \n\n    formatOpt (opt: O.PolylineOption = {}, path: google.maps.LatLng[]) {\n        util.objectAssign(D.polyline, opt);\n        return {\n            path: path,\n            strokeColor: D.polyline.color,\n            strokeWeight: D.polyline.weight,\n            strokeOpacity: D.polyline.opacity\n        }\n    }\n\n    setPath(latlngs: F.LatLng[]) {\n        let path = latlngs.map(latlng => {\n            return new google.maps.LatLng(latlng[0], latlng[1]);\n        });\n        this._original.setPath(path);\n    }\n\n    getPath(): F.LatLng[] {\n        let points: google.maps.MVCArray<google.maps.LatLng> = this._original.getPath();\n        return points.getArray().map(item => {\n            return [item.lat(), item.lng()]\n        });\n    }\n}\n\nclass Icon implements F.Icon {\n    _id: string;\n    _original: google.maps.Icon;\n\n    constructor(opt: O.IconOption) {\n        let iconOption = this.formatOpt(opt);\n        this._original = {\n            url: iconOption.url,\n            size: iconOption.size,\n            anchor: iconOption.anchor,\n        };\n    }\n\n    formatOpt(opt: O.IconOption = {}) {\n        return {\n            anchor: opt.anchor ? new google.maps.Point(opt.anchor[0], opt.anchor[1]) : null,\n            url: opt.url,\n            size: opt.size ? new google.maps.Size(opt.size[0], opt.size[1]) : null,\n        }\n    }\n\n    setImageUrl(url: string) {\n\n    }\n\n    setSize(size: F.Size) {\n\n    }\n\n    setAnchor(size: F.Size) {\n\n    }\n    \n    getImageUrl(): string {\n        return '';\n    }\n    \n    getAnchor(): F.Size {\n        return [];        \n    }\n    \n    getSize(): F.Size {\n        return [];\n    }\n}\n\nexport default class G_Map implements F.Factory {\n    Util: F.Util;\n\n    constructor () {\n        this.Util = {\n            formatEvent(e: any = {}): F.Event {\n                let point;\n                if (e.latLng) {\n                    point = [e.latLng.lat(), e.latLng.lng()];\n                }            \n                return {\n                    type: e.ta && e.ta.type,\n                    target: this,\n                    e: e,\n                    p: point,\n                }\n            }\n        }\n    }\n\n    Map(opt: O.MapOption): Map {\n        return new Map(opt);\n    }\n\n    Marker(latlng: F.LatLng, opt?: O.MarkerOption): Marker {\n        return new Marker(latlng, opt);\n    }\n\n    Polyline(latlngs: F.LatLng[], opt: O.PolylineOption): Polyline {\n        return new Polyline(latlngs, opt);\n    }\n\n    Icon(opt: O.IconOption): Icon {\n        return new Icon(opt);\n    }\n    \n    // Load map script\n    load(key: string, resolve: Function, reject: Function): void {\n        if ((<any>window).google.maps) {\n            resolve && resolve();\n            return;\n        }\n        let callbackName = 'map_init_' + Math.random().toString(16).substr(2);\n        let body = document.body;\n        let script = document.createElement(\"SCRIPT\");\n        let url = \"https://maps.googleapis.com/maps/api/js?key=\" + key + \"&callback=\" + callbackName;\n        script.setAttribute(\"src\", url);\n        script.setAttribute(\"defer\", \"\");\n        script.setAttribute(\"async\", \"\");\n        body.appendChild(script);\n        (<any>window)[callbackName] = function () {\n            resolve && resolve();\n            delete (<any>window)[callbackName];\n        }\n    }\n}\n\n/**\n * @function set overlay eventListener\n * @param {Function} constructor \n */\nfunction eventBinder(constructor: Function) {\n    // return MapEventListener\n    constructor.prototype.on = function(eventName: string, handler: Function):  F.MapsEventListener {\n        let fn: Function = handler.bind(this);\n        let listener: google.maps.MapsEventListener = this._original.addListener(eventName, fn);\n        return new F_MapsEventListener({\n            eventName: eventName,\n            host: this,\n            listener: listener,\n            handler: fn \n        });\n    }\n    // require MapEventListener\n    constructor.prototype.off = function(listener: F.MapsEventListener) {\n        google.maps.event.removeListener(listener.listener);\n    }\n}\n\n\n\n","import V from './var';\nimport F from './factory/index';\nimport LatLng from './factory/latlng';\nimport O from './options/mapOptions';\nimport A_Map from './constructors/amap/index';      // gaode map\nimport B_Map from './constructors/bmap/index';      // baidu map\nimport G_Map from './constructors/gmap/index';      // google map\nimport util from './utils';\n// Error with import require: can not find module 'object-assign'\n// import objectAssign = require('object-assign');\n\nexport default class Plain {\n    FACTORYS: {[key: string]: F.Factory};\n    Util: F.Util;\n    map: object;\n    factory: F.Factory;  \n    \n    constructor(factory?: F.Factory | string) {\n        let that = this;\n        factory && this.use(factory);\n        // Various utility functions\n        this.Util = {\n            formatEvent(e: any): F.Event {\n                return that.factory.Util.formatEvent.call(this, e);\n            }\n        }\n        util.objectAssign(this.Util, util);\n        this._v = V;\n    }\n\n    // Load the map factory plugin\n    use(factory: F.Factory | string, key?: string): Plain {\n        if(typeof factory === 'string') {\n            switch (factory) {\n                case 'BMAP': {\n                    this.factory = new B_Map();\n                    break;\n                }\n                case 'GMAP': {\n                    this.factory = new G_Map();\n                    break;\n                }\n                case 'AMAP': {\n                    this.factory = new A_Map();    \n                    break;\n                }\n                case 'LMAP': {\n                    // this.factory = new L_Map();\n                }\n            }\n        } else {\n            this.factory = factory;\n        }\n        return this;\n    }\n\n    // Create Map\n    @tagging()\n    Map([opt] : [O.MapOption]) {\n        return this.factory.Map(opt);\n    }\n\n    // Create Marker\n    @tagging()\n    Marker([latlng, opt] : [LatLng, O.MarkerOption]) {\n        return this.factory.Marker(latlng, opt);\n    }\n\n    // Create Polyline\n    @tagging()\n    Polyline([latlngs, opt] : [LatLng[], O.PolylineOption]) {\n        return this.factory.Polyline(latlngs, opt);\n    }\n\n    // Create Icon\n    @tagging()\n    Icon([opt] : [O.IconOption]) {\n        return this.factory.Icon(opt);\n    }\n    \n    loadMap(key: string, resolve: Function, reject: Function): void {\n        this.factory.load(key, resolve, reject);\n    }\n}\n\n/**\n * @function set _id property\n */\nfunction tagging(): Function {\n    return function(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n        let oldFn = descriptor.value;\n        descriptor.value= function(...arg: any[]) {\n            let value = oldFn.call(this, arg);\n            value._id = Math.random().toString(16).substr(2);\n            return value;  \n        };\n    }\n}\n\n","export default {\n    DEBUG: true,\n    name: 'plain',\n    coordType: 'DEFAULT',\n    setCoordType(type: string): void {\n        this.coordType = type;\n    }\n}","// Return an EventListener that can be used with Layer.off();\nimport Layer from './layer';\nimport O from '../options/mapOptions';\n\nexport default class MapsEventListener {\n    eventName: string;\n    host: Layer;           // Plain.Layer\n    handler: Function;    // Event handler\n    listener: any;        // Original MapsEventListener(eg: google.maps.event)\n    \n    constructor(parm: O.EventListenerOptions) {\n        this.eventName = parm.eventName;\n        this.host = parm.host;\n        this.handler = parm.handler;\n        this.listener = parm.listener;\n    }\n}","export default {\n    polyline: {\n        color: '#3388ff',\n        weight: 3,\n        opacity: 0.8,\n    }\n}","var x_PI = 3.14159265358979324 * 3000.0 / 180.0;\nvar PI = 3.1415926535897932384626;\nvar a = 6378245.0;\nvar ee = 0.00669342162296594323;\n/**\n * 百度坐标系 (BD-09) 与 火星坐标系 (GCJ-02)的转换\n * 即 百度 转 谷歌、高德\n * @param bd_lon\n * @param bd_lat\n * @returns {*[]}\n */\nvar bd09togcj02 = function bd09togcj02(bd_lat: number, bd_lon: number) {\n    var bd_lon = +bd_lon;\n    var bd_lat = +bd_lat;\n    var x = bd_lon - 0.0065;\n    var y = bd_lat - 0.006;\n    var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_PI);\n    var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_PI);\n    var gg_lng = z * Math.cos(theta);\n    var gg_lat = z * Math.sin(theta);\n    return [gg_lat, gg_lng]\n};\n\n/**\n * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换\n * 即谷歌、高德 转 百度\n * @param lng\n * @param lat\n * @returns {*[]}\n */\nvar gcj02tobd09 = function gcj02tobd09(lat: number, lng: number) {\n    var lat = +lat;\n    var lng = +lng;\n    var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);\n    var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);\n    var bd_lng = z * Math.cos(theta) + 0.0065;\n    var bd_lat = z * Math.sin(theta) + 0.006;\n    return [bd_lat, bd_lng]\n};\n\n/**\n * WGS84转GCj02\n * @param lng\n * @param lat\n * @returns {*[]}\n */\nvar wgs84togcj02 = function wgs84togcj02(lat: number, lng: number) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lat, lng)) {\n        return [lat, lng]\n    } else {\n        var dlat = transformlat(lat - 35.0, lng - 105.0);\n        var dlng = transformlng(lat - 35.0, lng - 105.0);\n        var radlat = lat / 180.0 * PI;\n        var magic = Math.sin(radlat);\n        magic = 1 - ee * magic * magic;\n        var sqrtmagic = Math.sqrt(magic);\n        dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n        dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n        var mglat = lat + dlat;\n        var mglng = lng + dlng;\n        return [mglat, mglng]\n    }\n};\n\n/**\n * GCJ02 转换为 WGS84\n * @param lng\n * @param lat\n * @returns {*[]}\n */\nvar gcj02towgs84 = function gcj02towgs84(lat: number, lng: number) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lat, lng)) {\n        return [lat, lng]\n    } else {\n        var dlat = transformlat(lat - 35.0, lng - 105.0);\n        var dlng = transformlng(lat - 35.0, lng - 105.0);\n        var radlat = lat / 180.0 * PI;\n        var magic = Math.sin(radlat);\n        magic = 1 - ee * magic * magic;\n        var sqrtmagic = Math.sqrt(magic);\n        dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n        dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n        var mglat = lat + dlat;\n        var mglng = lng + dlng;\n        return [lat * 2 - mglat, lng * 2 - mglng]\n    }\n};\n\nvar transformlat = function transformlat(lat: number, lng: number) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n    return ret\n};\n\nvar transformlng = function transformlng(lat: number, lng: number) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n    return ret\n};\n\n/**\n * 判断是否在国内，不在国内则不做偏移\n * @param lng\n * @param lat\n * @returns {boolean}\n */\nvar out_of_china = function out_of_china(lat: number, lng: number) {\n    var lat = +lat;\n    var lng = +lng;\n    // 纬度3.86~53.55,经度73.66~135.05\n    return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n};\n\nexport default {\n    bd09togcj02: bd09togcj02,\n    gcj02tobd09: gcj02tobd09,\n    wgs84togcj02: wgs84togcj02,\n    gcj02towgs84: gcj02towgs84\n}","import variable from './var';\nimport LatLng from './factory/latlng';\nimport coordtransform from './coordtransform';\n\nexport default {\n    // Print infomation\n    log(v: any): void {\n        if (v instanceof Error) {\n            console.error(v);\n        } else if(variable.DEBUG) {\n            console.log(`[${variable.name}] `, v);\n        }\n    },\n    \n    // Return a rectangle that cover all points\n    getBound(latlngs: LatLng[]): LatLng[] {\n        let rectangle;\n        let minLat = latlngs[0][0],\n            minLng = latlngs[0][1],\n            maxLat = minLat,\n            maxLng = minLng;\n        latlngs.map(latlng => {\n            if (latlng[0] < minLat) {\n                minLat = latlng[0];\n            } else if (latlng[0] > maxLat) {\n                maxLat = latlng[0];\n            }\n            if (latlng[1] < minLng) {\n                minLng = latlng[1];\n            } else if (latlng[1] > maxLng) {\n                maxLng = latlng[1];\n            }\n        });\n        return [[minLat, minLng], [maxLat, maxLng]];\n    },\n    \n    // Object property assign\n    // TODO: ...obj[]\n    objectAssign (target: {[key: string]: any}, source: {[key: string]: any}): object {\n        if ((<any>Object).assign) {\n            (<any>Object).assign(target, source);\n        } else {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    },\n    \n    // GCJ02 to BD09\n    g2b (latlngs: LatLng[]): LatLng[] {\n        if (!(latlngs[0] instanceof Array)) {\n            return coordtransform.gcj02tobd09(latlngs[0], latlngs[1]);\n        }\n        return latlngs.map(latlng => {\n            return coordtransform.gcj02tobd09(latlng[0], latlng[1]);\n        });\n    },\n    \n    // BD09 to GCJ02\n    b2g (latlngs: LatLng[]): LatLng[] {\n        if (!(latlngs[0] instanceof Array)) {\n            return coordtransform.bd09togcj02(latlngs[0], latlngs[1]);\n        }\n        return latlngs.map(latlng => {\n            return coordtransform.bd09togcj02(latlng[0], latlng[1]);\n        });\n    },\n    \n    w2g (latlngs: LatLng[]): LatLng[] {\n        if (!(latlngs[0] instanceof Array)) {\n            return coordtransform.wgs84togcj02(latlngs[0], latlngs[1]);\n        }\n        return latlngs.map(latlng => {\n            return coordtransform.wgs84togcj02(latlng[0], latlng[1]);\n        });\n    },\n    \n    g2w (latlngs: LatLng[]): LatLng[] {\n        if (!(latlngs[0] instanceof Array)) {\n            return coordtransform.gcj02towgs84(latlngs[0], latlngs[1]);\n        }\n        return latlngs.map(latlng => {\n            return coordtransform.gcj02towgs84(latlng[0], latlng[1]);\n        });\n    },\n    \n    w2b (latlngs: LatLng[]): LatLng[] {\n        if (!(latlngs[0] instanceof Array)) {\n            let coor = coordtransform.wgs84togcj02(latlngs[0], latlngs[1]);\n            return coordtransform.gcj02tobd09(coor[0], coor[1]);\n        }\n        let coords = latlngs.map(latlng => {\n            return coordtransform.wgs84togcj02(latlng[0], latlng[1]);\n        });\n        return coords.map(latlng => {\n            return coordtransform.gcj02tobd09(latlng[0], latlng[1]);\n        });\n    },\n    \n    b2w (latlngs: LatLng[]): LatLng[] {\n        if (!(latlngs[0] instanceof Array)) {\n            let coor = coordtransform.bd09togcj02(latlngs[0], latlngs[1]);\n            return coordtransform.gcj02towgs84(coor[0], coor[1]);\n        }\n        let coords = latlngs.map(latlng => {\n            return coordtransform.bd09togcj02(latlng[0], latlng[1]);\n        });\n        return coords.map(latlng => {\n            return coordtransform.gcj02towgs84(latlng[0], latlng[1]);\n        });\n    },\n    \n    locate(success?: Function, error?: Function): void {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                success && success(position.coords.latitude, position.coords.longitude);\n            }, function(e) {\n                error && error(e);\n            });\n        } else {\n            error && error(new Error('Geolocation is not supported by your browser'));\n        }\n    },\n}"],"names":["constructor","prototype","on","eventName","handler","fn","bind","this","listener","_original","F_MapsEventListener","host","off","addEventListener","removeEventListener","latlngs","type","V","coordType","util","b2g","b2w","g2b","w2b","addListener","google","maps","event","removeListener","target","propertyKey","descriptor","oldFn","value","_i","arg","call","_id","Math","random","toString","substr","DEBUG","name","setCoordType","parm","polyline","color","weight","opacity","x_PI","PI","a","ee","transformlat","lat","lng","ret","sqrt","abs","sin","transformlng","out_of_china","bd09togcj02","bd_lat","bd_lon","x","y","z","theta","atan2","cos","gg_lng","gcj02tobd09","bd_lng","wgs84togcj02","dlat","dlng","radlat","magic","sqrtmagic","gcj02towgs84","log","v","Error","console","error","variable","getBound","minLat","minLng","maxLat","maxLng","map","latlng","objectAssign","source","Object","assign","key","hasOwnProperty","Array","coordtransform","w2g","g2w","coor","locate","success","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","e","opt","MAP_TYPE","HYBRID","NORMAL","SATELLITE","AMap","Map","container","zoom","center","slice","reverse","layer","i","length","setMap","clearMap","setZoom","getZoom","zoomIn","zoomOut","bound","_boundMarkers","p","arr","_this","setPosition","_boundIcon","Icon","size","Size","Marker","icon","setFitView","remove","setCenter","LngLat","getCenter","panTo","setLayers","TileLayer","Satellite","RoadNet","TERRAIN","eventBinder","opts","formatOpt","option","raiseOnDrag","crossOnDrag","draggable","anchor","offset","Pixel","getPosition","path","polylineOption","Polyline","D","strokeColor","strokeWeight","strokeOpacity","points","setPath","getPath","item","iconOption","image","url","imageSize","Util","formatEvent","point","lnglat","replace","B_Map","resolve","reject","window","callbackName","body","document","script","createElement","setAttribute","appendChild","fixCoord","centerPoint","BMap","Point","centerAndZoom","enableScrollWheelZoom","addOverlay","removeOverlay","clearOverlays","setViewport","setMapType","BMAP_HYBRID_MAP","BMAP_NORMAL_MAP","BMAP_SATELLITE_MAP","enableDragging","LatLng","getElementById","mapTypeControl","fullscreenControl","scaleControl","streetViewControl","zoomControl","googleBound","LatLngBounds","fitBounds","setMapTypeId","MapTypeId","ROADMAP","getArray","latLng","ta","G_Map","factory","that","use","_v","Plain","A_Map","_a","load","__decorate","tagging"],"mappings":"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"}